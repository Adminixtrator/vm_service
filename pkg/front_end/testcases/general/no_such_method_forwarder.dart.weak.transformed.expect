library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;
import "dart:async" as asy;
import "dart:_internal" as _in;

class X extends core::Object {
  synthetic constructor •() → self::X
    : super core::Object::•()
    ;
  method _foo() → void /* originally async */ {
    final asy::_Future<dynamic> :async_future = new asy::_Future::•<dynamic>();
    core::bool* :is_sync = false;
    dynamic :return_value;
    (dynamic) → dynamic :async_op_then;
    (core::Object, core::StackTrace) → dynamic :async_op_error;
    core::int :await_jump_var = 0;
    dynamic :await_ctx_var;
    dynamic :saved_try_context_var0;
    function :async_op(dynamic :result_or_exception, dynamic :stack_trace) → dynamic yielding 
      try {
        #L1:
        {
          [yield] let dynamic #t1 = asy::_awaitHelper(null, :async_op_then, :async_op_error) in null;
          _in::unsafeCast<Null>(:result_or_exception);
          core::print("hello");
        }
        asy::_completeWithNoFutureOnAsyncReturn(:async_future, :return_value, :is_sync);
        return;
      }
      on dynamic catch(dynamic exception, core::StackTrace stack_trace) {
        asy::_completeOnAsyncError(:async_future, exception, stack_trace, :is_sync);
      }
    :async_op_then = asy::_asyncThenWrapperHelper(:async_op);
    :async_op_error = asy::_asyncErrorWrapperHelper(:async_op);
    :async_op(null, null){() → dynamic};
    :is_sync = true;
    return :async_future;
  }
  method foo() → void
    return this.{self::X::_foo}(){() → void};
}
class Y extends core::Object implements self::X {
  synthetic constructor •() → self::Y
    : super core::Object::•()
    ;
  method noSuchMethod(core::Invocation _) → void {
    core::print("Hello from noSuchMethod");
  }
  no-such-method-forwarder method _foo() → void
    return this.{self::Y::noSuchMethod}(new core::_InvocationMirror::_withType(#C1, 0, #C2, #C3, core::Map::unmodifiable<core::Symbol*, dynamic>(#C4))){(core::Invocation) → void};
  no-such-method-forwarder method foo() → void
    return this.{self::Y::noSuchMethod}(new core::_InvocationMirror::_withType(#C5, 0, #C2, #C3, core::Map::unmodifiable<core::Symbol*, dynamic>(#C4))){(core::Invocation) → void};
}
static method main() → dynamic {
  self::Y y = new self::Y::•();
  y.{self::X::foo}(){() → void};
}

constants  {
  #C1 = #org-dartlang-testcase:///no_such_method_forwarder.dart::_foo
  #C2 = <core::Type*>[]
  #C3 = <dynamic>[]
  #C4 = <core::Symbol*, dynamic>{)
  #C5 = #foo
}
